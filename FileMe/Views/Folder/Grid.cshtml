@using FileMe.DAL.Classes
@using FileMe.Extensions
@model IEnumerable<FileMe.DAL.Classes.Folder>

@{
    var parent = ViewData["Parent"] as Folder;
    var isRootFolder = Convert.ToBoolean(ViewData["IsRootFolder"] ?? true);
}

<table class="table">
    <tr>
        <th>
            @Html.SortLink("Название", "Name", "Index", "Folder", null)
        </th>
        <th>
            @Html.SortLink("Дата создания", "CreationDate", "Index", "Folder", null)
        </th>
    </tr>
    @if (!isRootFolder)
    {
        <tr>
            <td>
                @Html.ActionLink("\\...", "Index", new { parent = parent != null ? parent.Id : (long?)null }, null)
            </td>
        </tr>

    }
    @foreach (var item in Model)
    {
        <tr>
            @if (!item.IsFile)
            {
                <td>
                    <img style="width: 25px; height: 25px;" src="~/Content/images/folder.png" />
                    @Html.ActionLink(item.Name, "Index", new { parent = item.Id }, null)
                </td>
                <td>
                    <div>
                        @Html.DisplayFor(modelItem => item.CreationDate)
                    </div>
                </td>
            }
        </tr>
    }
    @foreach (var item in Model)
    {
        <tr>
            @if (item.IsFile)
            {
                <td>
                    <img style="width: 25px; height: 25px;" src="~/Content/images/file.png" />
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <div>
                        @Html.DisplayFor(modelItem => item.CreationDate)
                    </div>
                </td>
            }
        </tr>
    }
</table>